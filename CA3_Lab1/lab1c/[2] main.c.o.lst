*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  /*  Blinking LEDs on Dragon12 - C version
    2:  
    3:      Computerarchitektur 3
    4:      (C) 2019 J. Friedrich, W. Zimmermann
    5:      Hochschule Esslingen
    6:  
    7:      Author:  W.Zimmermann, Feb 4, 2019  
    8:               (based on code provided by J. Friedrich)
    9:  */
   10:  
   11:  #include <hidef.h>                      //Common defines
   12:  #include <mc9s12dp256.h>                //CPU specific defines
   13:  
   14:  
   15:  #pragma LINK_INFO DERIVATIVE "mc9s12dp256b"
   16:  
   17:  
   18:  //#define PORTB (*(char*) 0x0001)       //Already defined in mc9s12dp256.h
   19:  //#define DDRB  (*(char*) 0x0003)
   20:  //#define DDRJ  (*(char*) 0x0268)
   21:  //#define PTJ   (*(char*) 0x026A)
   22:  
   23:  //#define SEVEN_SEGS_OFF                //Uncomment this to turn seven segment display off
   24:  /**
   25:  #define IMAX  512L*1024L                //Delay count
   26:                                          //For visualization in the simulator choose the IO_LED component
   27:                                          //... and set PORT=1, DDR=3
   28:  
   29:  long i;                                 //Counter variable
   30:  
   31:  
   32:  void main(void) 
   33:  {   EnableInterrupts;                   //Allow interrupts for debugger
   34:  
   35:      DDRJ_DDRJ1 = 1;                     //Port J.1 as output
   36:      PTJ_PTJ1   = 0;                     //J.1=0 --> Activate LEDs
   37:  
   38:  #ifdef SEVEN_SEGS_OFF    
   39:      DDRP = DDRP | 0x0F;                 //Port P.3..0 as outputs (seven segment display control)
   40:      PTP  = PTP  | 0x0F;                 //Turn off seven segment display
   41:  #endif    
   42:      
   43:      DDRB  = 0xFF;                       //Port B.7...0 as outputs (LEDs)
   44:      PORTB = 0x55;                       //Turn on every second LED
   45:      
   46:      for(;;)             
   47:      {   PORTB = ~PORTB;                 //Toggle LEDs
   48:          
   49:          for (i=IMAX; i > 0; i--)        //Delay loop to control toggle frequency
   50:          {
   51:          }
   52:      }
   53:  }
   54:  **/
   55:  
   56:  
   57:  
   58:  
   59:  char MeinChar;
   60:  
   61:  
   62:
   63:  
   64:  
   65:  
   66:  
   67:  
   68:  
   69:  
   70:  
   71:  
   72:  
   73:  
   74:  
   75:  
   76:  
   77:  
   78:  
   79:  
   80:  
   81:  
   82:  
   83:  
   84:  
   85:  
   86:  
   87:  
   88:  
   89:  
   90:  
   91:  
   92:  
   93:  
   94:  
   95:  
   96:  
